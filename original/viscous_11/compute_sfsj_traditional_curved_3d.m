function [sf,sj]=compute_sfsj_traditional_curved_3d(neight,ne,nexney,nex,nx,ny,...
    weights,c,co,determinants,dt,n1,n2,diffT,chi)

w=[5/18 4/9 5/18];

sf=zeros(1,neight);
sj=zeros(neight,neight);

% === The case in which temperature is uniform throughout =================

if isscalar(diffT)
    for e=1:1:ne

        gbfs=get_gbfs_of_element(e,nexney,nex,nx,ny);
        conc_=compute_elemental_weights_curved_3d(e,c,weights,nexney,nex,nx,ny,gbfs);

        con=dim_reducer1_3d(conc_(1,:,:,:));

        cono=compute_elemental_weights_type_I_curved_3d(e,co,weights,nexney,nex,nx,ny,gbfs);

        cont=(con-cono)/dt;

        for iz=1:1:3
            for iy=1:1:3
                for ix=1:1:3
                    ilbf=0;
                    for iorientation=1:1:8
                        for itype=1:1:8
                            ilbf=ilbf+1;
                            gbf1=gbfs(ilbf);

                            sf(gbf1)=sf(gbf1)+determinants(e,ix,iy,iz)*w(ix)*w(iy)*w(iz)*(...
                                weights(e,iorientation,itype,1,ix,iy,iz)*cont(ix,iy,iz)-diffT*weights(e,iorientation,itype,1,ix,iy,iz)*...
                                ((-1/(con(ix,iy,iz)^2*n1)+1/((1-con(ix,iy,iz))^2*n2))*...
                                (conc_(2,ix,iy,iz)^2+conc_(3,ix,iy,iz)^2+conc_(4,ix,iy,iz)^2)+...
                                (1/(con(ix,iy,iz)*n1)+1/((1-con(ix,iy,iz))*n2)-2*chi)*...
                                (conc_(5,ix,iy,iz)+conc_(6,ix,iy,iz)+conc_(7,ix,iy,iz)))+...
                                (conc_(5,ix,iy,iz)+conc_(6,ix,iy,iz)+conc_(7,ix,iy,iz))*...
                                (weights(e,iorientation,itype,5,ix,iy,iz)+weights(e,iorientation,itype,6,ix,iy,iz)+weights(e,iorientation,itype,7,ix,iy,iz))...
                                );    
                            %--------------------------------------------------
                            jlbf=0;
                            for jorientation=1:1:8
                                for jtype=1:1:8
                                    jlbf=jlbf+1;
                                    gbf2=gbfs(jlbf);

                                    sj(gbf1,gbf2)=sj(gbf1,gbf2)+determinants(e,ix,iy,iz)*w(ix)*w(iy)*w(iz)*(...
                                        weights(e,iorientation,itype,1,ix,iy,iz)*weights(e,jorientation,jtype,1,ix,iy,iz)/dt...
                                        -diffT*weights(e,iorientation,itype,1,ix,iy,iz)...
                                        *(2*weights(e,jorientation,jtype,1,ix,iy,iz)...
                                        *((con(ix,iy,iz)^3*n1)^-1+((1-con(ix,iy,iz))^3*n2)^-1)...
                                        *(conc_(2,ix,iy,iz)^2+conc_(3,ix,iy,iz)^2+conc_(4,ix,iy,iz)^2)...
                                        +weights(e,jorientation,jtype,1,ix,iy,iz)...
                                        *(-(con(ix,iy,iz)^2*n1)^-1+((1-con(ix,iy,iz))^2*n2)^-1)...
                                        *(2*(conc_(2,ix,iy,iz)+conc_(3,ix,iy,iz)+conc_(4,ix,iy,iz))...
                                        +(conc_(5,ix,iy,iz)+conc_(6,ix,iy,iz)+conc_(7,ix,iy,iz)))...
                                        +((con(ix,iy,iz)*n1)^-1+((1-con(ix,iy,iz))*n2)^-1-2*chi)...
                                        *(weights(e,jorientation,jtype,5,ix,iy,iz)+weights(e,jorientation,jtype,6,ix,iy,iz)+weights(e,jorientation,jtype,7,ix,iy,iz)))...
                                        +(weights(e,iorientation,itype,5,ix,iy,iz)+weights(e,iorientation,itype,6,ix,iy,iz)+weights(e,iorientation,itype,7,ix,iy,iz))...
                                        *(weights(e,jorientation,jtype,5,ix,iy,iz)+weights(e,jorientation,jtype,6,ix,iy,iz)+weights(e,jorientation,jtype,7,ix,iy,iz))...
                                        ...
                                        );
                                end
                            end
                            %--------------------------------------------------
                        end
                    end
                end
            end
        end
    end
    
% === The case in which temperature gradient is present ===================

else
    xth_ln1=0;
    for e=1:1:ne
        xth_ln1=xth_ln1+1;
        if xth_ln1==nx
            xth_ln1=1;
        end
        diffT_=diffT(xth_ln1,:);
        chi_=chi(xth_ln1,:);

        gbfs=get_gbfs_of_element(e,nexney,nex,nx,ny);
        conc_=compute_elemental_weights_curved_3d(e,c,weights,nexney,nex,nx,ny,gbfs);

        con=dim_reducer1_3d(conc_(1,:,:,:));

        cono=compute_elemental_weights_type_I_curved_3d(e,co,weights,nexney,nex,nx,ny,gbfs);

        cont=(con-cono)/dt;

        for iz=1:1:3
            for iy=1:1:3
                for ix=1:1:3
                    ilbf=0;
                    for iorientation=1:1:8
                        for itype=1:1:8
                            ilbf=ilbf+1;
                            gbf1=gbfs(ilbf);

                            sf(gbf1)=sf(gbf1)+determinants(e,ix,iy,iz)*w(ix)*w(iy)*w(iz)*(...
                                weights(e,iorientation,itype,1,ix,iy,iz)*cont(ix,iy,iz)-diffT_(ix)*weights(e,iorientation,itype,1,ix,iy,iz)*...
                                ((-1/(con(ix,iy,iz)^2*n1)+1/((1-con(ix,iy,iz))^2*n2))*...
                                (conc_(2,ix,iy,iz)^2+conc_(3,ix,iy,iz)^2+conc_(4,ix,iy,iz)^2)+...
                                (1/(con(ix,iy,iz)*n1)+1/((1-con(ix,iy,iz))*n2)-2*chi_(ix))*...
                                (conc_(5,ix,iy,iz)+conc_(6,ix,iy,iz)+conc_(7,ix,iy,iz)))+...
                                (conc_(5,ix,iy,iz)+conc_(6,ix,iy,iz)+conc_(7,ix,iy,iz))*...
                                (weights(e,iorientation,itype,5,ix,iy,iz)+weights(e,iorientation,itype,6,ix,iy,iz)+weights(e,iorientation,itype,7,ix,iy,iz))...
                                );    
                            %--------------------------------------------------
                            jlbf=0;
                            for jorientation=1:1:8
                                for jtype=1:1:8
                                    jlbf=jlbf+1;
                                    gbf2=gbfs(jlbf);

                                    sj(gbf1,gbf2)=sj(gbf1,gbf2)+determinants(e,ix,iy,iz)*w(ix)*w(iy)*w(iz)*(...
                                        weights(e,iorientation,itype,1,ix,iy,iz)*weights(e,jorientation,jtype,1,ix,iy,iz)/dt...
                                        -diffT_(ix)*weights(e,iorientation,itype,1,ix,iy,iz)...
                                        *(2*weights(e,jorientation,jtype,1,ix,iy,iz)...
                                        *((con(ix,iy,iz)^3*n1)^-1+((1-con(ix,iy,iz))^3*n2)^-1)...
                                        *(conc_(2,ix,iy,iz)^2+conc_(3,ix,iy,iz)^2+conc_(4,ix,iy,iz)^2)...
                                        +weights(e,jorientation,jtype,1,ix,iy,iz)...
                                        *(-(con(ix,iy,iz)^2*n1)^-1+((1-con(ix,iy,iz))^2*n2)^-1)...
                                        *(2*(conc_(2,ix,iy,iz)+conc_(3,ix,iy,iz)+conc_(4,ix,iy,iz))...
                                        +(conc_(5,ix,iy,iz)+conc_(6,ix,iy,iz)+conc_(7,ix,iy,iz)))...
                                        +((con(ix,iy,iz)*n1)^-1+((1-con(ix,iy,iz))*n2)^-1-2*chi_(ix))...
                                        *(weights(e,jorientation,jtype,5,ix,iy,iz)+weights(e,jorientation,jtype,6,ix,iy,iz)+weights(e,jorientation,jtype,7,ix,iy,iz)))...
                                        +(weights(e,iorientation,itype,5,ix,iy,iz)+weights(e,iorientation,itype,6,ix,iy,iz)+weights(e,iorientation,itype,7,ix,iy,iz))...
                                        *(weights(e,jorientation,jtype,5,ix,iy,iz)+weights(e,jorientation,jtype,6,ix,iy,iz)+weights(e,jorientation,jtype,7,ix,iy,iz))...
                                        ...
                                        );
                                end
                            end
                            %--------------------------------------------------
                        end
                    end
                end
            end
        end
    end
end

end