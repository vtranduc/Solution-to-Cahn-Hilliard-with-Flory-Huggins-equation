function sj=sj_serendipity_3d(...
    gbfs1,gbfs2,nnz_,dt,weights,nex,ney,nx,ny,nz,...
    dxyz,wTerms,wwTerms,terms,...
    nworkers,communication_reliever)

sj=zeros(1,nnz_);

w=[5/18 4/9 5/18];

if communication_reliever==1
    allocation=wise_task_splitter(nnz_,nworkers);
    [~,size_]=size(allocation);
    extra=mod(nnz_,nworkers);
    load_less=(nnz_-extra)/nworkers;
    if extra==0
        load_more=load_less;
    else
        load_more=load_less+1;
    end
    temp=zeros(nworkers,size_);
end

if communication_reliever==1
    parfor worker=1:1:nworkers
        if worker<=extra
            load=load_more;
        else
            load=load_less;
        end
        temp(worker,:)=task_split_assist(gbfs1,gbfs2,...
            w,dt,weights,nex,ney,nx,ny,nz,dxyz,wTerms,wwTerms,terms,...
            size_,load,allocation(worker,:));
    end
    index=0;
    for worker=1:1:nworkers
        if worker<=extra
            load=load_more;
        else
            load=load_less;
        end
        for i=1:1:load
            index=index+1;
            sj(index)=temp(worker,i);
        end
    end
elseif communication_reliever==0
    parfor sjth=1:1:nnz_
        sj(sjth)=compute_sjth_sj_with_terms_serendipity(sjth,gbfs1,gbfs2,...
            w,dt,weights,nex,ney,nx,ny,nz,dxyz,wTerms,wwTerms,terms);
    end
end
    

end

function sol=task_split_assist(gbfs1,gbfs2,...
    w,dt,weights,nex,ney,nx,ny,nz,dxyz,wTerms,wwTerms,terms,...
    size_,load,keys)
sol=zeros(1,size_);

for i=1:1:load
    sol(i)=compute_sjth_sj_with_terms_serendipity(keys(i),gbfs1,gbfs2,...
        w,dt,weights,nex,ney,nx,ny,nz,dxyz,wTerms,wwTerms,terms);
end
end


function solution=compute_sjth_sj_with_terms_serendipity(sjth,gbfs1,gbfs2,...
    w,dt,weights,nex,ney,nx,ny,nz,dxyz,wTerms,wwTerms,terms)

solution=0;

[elements,lbfs1,lbfs2]=...
    analyze_interaction_serendipity(gbfs1(sjth),gbfs2(sjth),nex,ney,nx,ny,nz);

for i_positional_element=1:1:8
    if elements(i_positional_element)~=0
        [orientation1,type1]=analyze_lbf_serendipity(lbfs1(i_positional_element));
        [orientation2,type2]=analyze_lbf_serendipity(lbfs2(i_positional_element));
        for ix=1:1:3
            for iy=1:1:3
                for iz=1:1:3
                    
                    solution=solution+w(ix)*w(iy)*w(iz)*(...
                        ...
                        ...
                        weights(orientation1,type1,1,ix,iy,iz)...
                        *weights(orientation2,type2,1,ix,iy,iz)...
                        /dt...
                        ...
                        ...
                        +weights(orientation2,type2,1,ix,iy,iz)*(...
                        ...
                        terms(elements(i_positional_element),1,ix,iy,iz)...
                        *weights(orientation1,type1,2,ix,iy,iz)...
                        +terms(elements(i_positional_element),2,ix,iy,iz)...
                        *weights(orientation1,type1,3,ix,iy,iz)...
                        +terms(elements(i_positional_element),3,ix,iy,iz)...
                        *weights(orientation1,type1,4,ix,iy,iz)...
                        )...
                        ...
                        +terms(elements(i_positional_element),4,ix,iy,iz)...
                        *wwTerms(orientation1,type1,orientation2,type2,ix,iy,iz)...
                        ...
                        ...
                        +wTerms(orientation1,type1,ix,iy,iz)...
                        *wTerms(orientation2,type2,ix,iy,iz)...
                        ...
                        ...
                        );

                end
            end
        end
    end
end

solution=solution*dxyz;

end