function sj=compute_sj_curved_3d(gbfs1,gbfs2,nnz_,conc_,dt,weights,nex,ney,nx,ny,nz,n1,n2,determinants,diffT,chi,wTerms)

sj=zeros(1,nnz_);

w=[5/18 4/9 5/18];

if isscalar(diffT)
    parfor sjth=1:1:nnz_ %Parfor must be feasible!
        sj(sjth)=compute_sjth_sj_3d(sjth,gbfs1,gbfs2,...
            conc_,w,dt,diffT,chi,weights,nex,ney,nx,ny,nz,n1,n2,determinants,wTerms);
    end
else
    parfor sjth=1:1:nnz_
        sj(sjth)=compute_sjth_sj_gradient_3d(sjth,gbfs1,gbfs2,...
            conc_,w,dt,diffT,chi,weights,nex,ney,nx,ny,nz,n1,n2,determinants,wTerms);
    end
end

end

% === Temperature gradient is present=======================================

function solution=compute_sjth_sj_gradient_3d(sjth,gbfs1,gbfs2,...
    conc_,w,dt,diffT,chi,weights,nex,ney,nx,ny,nz,n1,n2,determinants,wTerms)

solution=0;

[elements,lbfs1,lbfs2]=analyze_interaction_3d(...
	gbfs1(sjth),gbfs2(sjth),nex,ney,nx,ny,nz);

for i_positional_element=1:1:8

    if elements(i_positional_element)~=0

        [orientation1,type1]=analyze_lbf_3d(lbfs1(i_positional_element));
        [orientation2,type2]=analyze_lbf_3d(lbfs2(i_positional_element));

        n1xth=get_n1xth_3d(elements(i_positional_element),nex);
        
        for ix=1:1:3
            for iy=1:1:3
                for iz=1:1:3
                    
                    solution=solution+w(ix)*w(iy)*w(iz)*determinants(elements(i_positional_element),ix,iy,iz)*(...
                        weights(elements(i_positional_element),orientation1,type1,1,ix,iy,iz)*weights(elements(i_positional_element),orientation2,type2,1,ix,iy,iz)/dt...
                        -diffT(n1xth,ix)*weights(elements(i_positional_element),orientation1,type1,1,ix,iy,iz)...
                        *(2*weights(elements(i_positional_element),orientation2,type2,1,ix,iy,iz)...
                        *((conc_(elements(i_positional_element),1,ix,iy,iz)^3*n1)^-1+((1-conc_(elements(i_positional_element),1,ix,iy,iz))^3*n2)^-1)...
                        *(conc_(elements(i_positional_element),2,ix,iy,iz)^2+conc_(elements(i_positional_element),3,ix,iy,iz)^2+conc_(elements(i_positional_element),4,ix,iy,iz)^2)...
                        +weights(elements(i_positional_element),orientation2,type2,1,ix,iy,iz)...
                        *(-(conc_(elements(i_positional_element),1,ix,iy,iz)^2*n1)^-1+((1-conc_(elements(i_positional_element),1,ix,iy,iz))^2*n2)^-1)...
                        *(2*(conc_(elements(i_positional_element),2,ix,iy,iz)+conc_(elements(i_positional_element),3,ix,iy,iz)+conc_(elements(i_positional_element),4,ix,iy,iz))...
                        +(conc_(elements(i_positional_element),5,ix,iy,iz)+conc_(elements(i_positional_element),6,ix,iy,iz)+conc_(elements(i_positional_element),7,ix,iy,iz)))...
                        +((conc_(elements(i_positional_element),1,ix,iy,iz)*n1)^-1+((1-conc_(elements(i_positional_element),1,ix,iy,iz))*n2)^-1-2*chi(n1xth,ix))...
                        *wTerms(elements(i_positional_element),orientation2,type2,ix,iy,iz))...
                        +wTerms(elements(i_positional_element),orientation1,type1,ix,iy,iz)...
                        *wTerms(elements(i_positional_element),orientation2,type2,ix,iy,iz)...
                        ...
                        );
                    
                end
            end
        end
    end
end
% solution=solution*dxyz;
end

% === No temperature gradient =============================================

function solution=compute_sjth_sj_3d(sjth,gbfs1,gbfs2,...
    conc_,w,dt,diffT,chi,weights,nex,ney,nx,ny,nz,n1,n2,determinants,wTerms)

solution=0;

[elements,lbfs1,lbfs2]=analyze_interaction_3d(...
	gbfs1(sjth),gbfs2(sjth),nex,ney,nx,ny,nz);

for i_positional_element=1:1:8

    if elements(i_positional_element)~=0

        [orientation1,type1]=analyze_lbf_3d(lbfs1(i_positional_element));
        [orientation2,type2]=analyze_lbf_3d(lbfs2(i_positional_element));
        
        for ix=1:1:3
            for iy=1:1:3
                for iz=1:1:3
                    
                    solution=solution+w(ix)*w(iy)*w(iz)*determinants(elements(i_positional_element),ix,iy,iz)*(...
                        weights(elements(i_positional_element),orientation1,type1,1,ix,iy,iz)*weights(elements(i_positional_element),orientation2,type2,1,ix,iy,iz)/dt...
                        -diffT*weights(elements(i_positional_element),orientation1,type1,1,ix,iy,iz)...
                        *(2*weights(elements(i_positional_element),orientation2,type2,1,ix,iy,iz)...
                        *((conc_(elements(i_positional_element),1,ix,iy,iz)^3*n1)^-1+((1-conc_(elements(i_positional_element),1,ix,iy,iz))^3*n2)^-1)...
                        *(conc_(elements(i_positional_element),2,ix,iy,iz)^2+conc_(elements(i_positional_element),3,ix,iy,iz)^2+conc_(elements(i_positional_element),4,ix,iy,iz)^2)...
                        +weights(elements(i_positional_element),orientation2,type2,1,ix,iy,iz)...
                        *(-(conc_(elements(i_positional_element),1,ix,iy,iz)^2*n1)^-1+((1-conc_(elements(i_positional_element),1,ix,iy,iz))^2*n2)^-1)...
                        *(2*(conc_(elements(i_positional_element),2,ix,iy,iz)+conc_(elements(i_positional_element),3,ix,iy,iz)+conc_(elements(i_positional_element),4,ix,iy,iz))...
                        +(conc_(elements(i_positional_element),5,ix,iy,iz)+conc_(elements(i_positional_element),6,ix,iy,iz)+conc_(elements(i_positional_element),7,ix,iy,iz)))...
                        +((conc_(elements(i_positional_element),1,ix,iy,iz)*n1)^-1+((1-conc_(elements(i_positional_element),1,ix,iy,iz))*n2)^-1-2*chi)...
                        *wTerms(elements(i_positional_element),orientation2,type2,ix,iy,iz))...
                        +wTerms(elements(i_positional_element),orientation1,type1,ix,iy,iz)...
                        *wTerms(elements(i_positional_element),orientation2,type2,ix,iy,iz)...
                        ...
                        );
                    
                end
            end
        end
    end
end
% solution=solution*dxyz;
end