function sj=compute_sj_with_terms_3d(gbfs1,gbfs2,nnz_,dt,weights,nex,ney,nx,ny,nz,dxyz,diffT,wTerms,terms,conc_234)

sj=zeros(1,nnz_);

w=[5/18 4/9 5/18];

%----
% diff=1800;
% T=0.6;
% chi=(0.5-1*(1-1/T))*ones(1,3);
% diffT=diff*T*ones(1,3);
% size(weights)
% size(conc)
%-------


if isscalar(diffT)
    parfor sjth=1:1:nnz_
        sj(sjth)=compute_sjth_sj_with_terms_3d(sjth,gbfs1,gbfs2,...
            w,dt,diffT,weights,nex,ney,nx,ny,nz,dxyz,wTerms,terms,conc_234);
    end
else
    parfor sjth=1:1:nnz_
        sj(sjth)=compute_sjth_sj_gradient_with_terms_3d(sjth,gbfs1,gbfs2,...
            w,dt,diffT,weights,nex,ney,nx,ny,nz,dxyz,wTerms,terms);
    end
end

end

% === Temperature gradient is present =============================================

% function solution=compute_sjth_sj_gradient_with_terms_3d(sjth,gbfs1,gbfs2,...
%     w,dt,diffT,weights,nex,ney,nx,ny,nz,dxyz,wTerms,terms)
% 
% solution=0;
% 
% [elements,lbfs1,lbfs2]=analyze_interaction_3d(...
% 	gbfs1(sjth),gbfs2(sjth),nex,ney,nx,ny,nz);
% 
% for i_positional_element=1:1:8
% 
%     if elements(i_positional_element)~=0
%      
%         [orientation1,type1]=analyze_lbf_3d(lbfs1(i_positional_element));
%         [orientation2,type2]=analyze_lbf_3d(lbfs2(i_positional_element));
%         
%         n1xth=get_n1xth_3d(elements(i_positional_element),nex);
%         
%         for ix=1:1:3
%             for iy=1:1:3
%                 for iz=1:1:3
%                     
%                     solution=solution+w(ix)*w(iy)*w(iz)*(...
%                         weights(orientation1,type1,1,ix,iy,iz)*weights(orientation2,type2,1,ix,iy,iz)/dt...
%                         -diffT(n1xth,ix)*weights(orientation1,type1,1,ix,iy,iz)...
%                         *(weights(orientation2,type2,1,ix,iy,iz)...
%                         *terms(elements(i_positional_element),4,ix,iy,iz)...
%                         +weights(orientation2,type2,1,ix,iy,iz)...
%                         *terms(elements(i_positional_element),5,ix,iy,iz)...
%                         +terms(elements(i_positional_element),6,ix,iy,iz)...
%                         *wTerms(orientation2,type2,ix,iy,iz))...
%                         +wTerms(orientation1,type1,ix,iy,iz)...
%                         *wTerms(orientation2,type2,ix,iy,iz)...
%                         ...
%                         );
%                 end
%             end
%         end
%     end
% end
% solution=solution*dxyz;
% end

% === No temperature gradient =============================================

function solution=compute_sjth_sj_with_terms_3d(sjth,gbfs1,gbfs2,...
    w,dt,diffT,weights,nex,ney,nx,ny,nz,dxyz,wTerms,terms,conc_234)

solution=0;

[elements,lbfs1,lbfs2]=analyze_interaction_3d(...
	gbfs1(sjth),gbfs2(sjth),nex,ney,nx,ny,nz);

% itest=0;
% test1=zeros(54,14);

for i_positional_element=1:1:8

    if elements(i_positional_element)~=0
     
        [orientation1,type1]=analyze_lbf_3d(lbfs1(i_positional_element));
        [orientation2,type2]=analyze_lbf_3d(lbfs2(i_positional_element));
        
        for ix=1:1:3
            for iy=1:1:3
                for iz=1:1:3
                    
                    %---------------------------------------------------------
%                     solution=solution+w(ix)*w(iy)*w(iz)*(...
%                         weights(orientation1,type1,1,ix,iy,iz)*weights(orientation2,type2,1,ix,iy,iz)/dt...
%                         -diffT*weights(orientation1,type1,1,ix,iy,iz)...
%                         *(weights(orientation2,type2,1,ix,iy,iz)...
%                         *terms(elements(i_positional_element),4,ix,iy,iz)...
%                         +weights(orientation2,type2,1,ix,iy,iz)...
%                         *terms(elements(i_positional_element),5,ix,iy,iz)...
%                         +terms(elements(i_positional_element),6,ix,iy,iz)...
%                         *wTerms(orientation2,type2,ix,iy,iz))...
%                         +wTerms(orientation1,type1,ix,iy,iz)...
%                         *wTerms(orientation2,type2,ix,iy,iz)...
%                         ...
%                         );
                    
                    
                    solution=solution+w(ix)*w(iy)*w(iz)*(...
                        weights(orientation1,type1,1,ix,iy,iz)*weights(orientation2,type2,1,ix,iy,iz)/dt...
                        -diffT*weights(orientation1,type1,1,ix,iy,iz)...
                        *(weights(orientation2,type2,1,ix,iy,iz)...
                        *terms(elements(i_positional_element),4,ix,iy,iz)...
                        ...
                        ...
                        +terms(elements(i_positional_element),5,ix,iy,iz)...
                        *(2*(conc_234(elements(i_positional_element),1,ix,iy,iz)*weights(orientation2,type2,2,ix,iy,iz)...
                        +conc_234(elements(i_positional_element),2,ix,iy,iz)*weights(orientation2,type2,3,ix,iy,iz)...
                        +conc_234(elements(i_positional_element),3,ix,iy,iz)*weights(orientation2,type2,4,ix,iy,iz))...
                        +weights(orientation2,type2,1,ix,iy,iz)*terms(elements(i_positional_element),3,ix,iy,iz))...
                        ...
                        +terms(elements(i_positional_element),6,ix,iy,iz)...
                        *wTerms(orientation2,type2,ix,iy,iz))...
                        +wTerms(orientation1,type1,ix,iy,iz)...
                        *wTerms(orientation2,type2,ix,iy,iz)...
                        ...
                        );
                    
                    
                    
%                     solution=solution+take;
%                     
%                     itest=itest+1;
%                     test1(itest,1)=take*dxyz;
%                     test1(itest,2)=dxyz;
%                     test1(itest,3)=weights(orientation1,type1,1,ix,iy,iz)*weights(orientation2,type2,1,ix,iy,iz)/dt;
%                     test1(itest,4)=diffT*weights(orientation1,type1,1,ix,iy,iz);
%                     test1(itest,5)=weights(orientation2,type2,1,ix,iy,iz)...
%                         *terms(elements(i_positional_element),4,ix,iy,iz);
%                     test1(itest,6)=(2*(conc_(elements(i_positional_element),2,ix,iy,iz)*weights(orientation2,type2,2,ix,iy,iz)...
%                         +conc_(elements(i_positional_element),3,ix,iy,iz)*weights(orientation2,type2,3,ix,iy,iz)...
%                         +conc_(elements(i_positional_element),4,ix,iy,iz)*weights(orientation2,type2,4,ix,iy,iz))...
%                         +weights(orientation2,type2,1,ix,iy,iz)*terms(elements(i_positional_element),3,ix,iy,iz));
%                     test1(itest,7)=terms(elements(i_positional_element),6,ix,iy,iz)...
%                         *wTerms(orientation2,type2,ix,iy,iz);
%                     test1(itest,8)=wTerms(orientation1,type1,ix,iy,iz)...
%                         *wTerms(orientation2,type2,ix,iy,iz);
%                     test1(itest,9)=terms(elements(i_positional_element),5,ix,iy,iz);
%                     
%                     test1(itest,10)=elements(i_positional_element);
%                     test1(itest,11)=ix;
%                     test1(itest,12)=iy;
%                     test1(itest,13)=iz;
%                     test1(itest,14)=0;
                    
                    
%                     if itest==500000
%                         warning('sekai 1')
%                         solution*dxyz
%                         solution=solution*dxyz
%                         return
%                     end
                    
%                     solution=solution+take;
%                     
%                     itest=itest+1;
%                     if itest>=200
%                         warning('Correct one is')
%                         a=solution*dxyz
%                         return
%                     end
                    
%                     itest=itest+1;
%                     test1(itest,:)=[take gbfs1(sjth) gbfs2(sjth) elements(i_positional_element) 0 0 0];
                    
%                     a=weights(orientation1,type1,1,ix,iy,iz)*weights(orientation2,type2,1,ix,iy,iz);
%                     b=2*(conc_(elements(i_positional_element),2,ix,iy,iz)*weights(orientation2,type2,2,ix,iy,iz)...
%                         +conc_(elements(i_positional_element),3,ix,iy,iz)*weights(orientation2,type2,3,ix,iy,iz)...
%                         +conc_(elements(i_positional_element),4,ix,iy,iz)*weights(orientation2,type2,4,ix,iy,iz));
%                     c=conc_(elements(i_positional_element),2,ix,iy,iz);
%                     d=weights(orientation2,type2,2,ix,iy,iz);
%                     [a b c d]
%                     warning('Correct one is')
%                     solution*dxyz
%                     return
                    
%                     test1=w(ix)*w(iy)*w(iz)*(...
%                         weights(orientation1,type1,1,ix,iy,iz)*weights(orientation2,type2,1,ix,iy,iz)/dt...
%                         -diffT*weights(orientation1,type1,1,ix,iy,iz)...
%                         *(weights(orientation2,type2,1,ix,iy,iz)...
%                         *terms(elements(i_positional_element),4,ix,iy,iz)...
%                         ...
%                         ...
%                         +terms(elements(i_positional_element),5,ix,iy,iz)...
%                         *(2*(conc_(elements(i_positional_element),2,ix,iy,iz)*weights(orientation2,type2,2,ix,iy,iz)...
%                         +conc_(elements(i_positional_element),3,ix,iy,iz)*weights(orientation2,type2,3,ix,iy,iz)...
%                         +conc_(elements(i_positional_element),4,ix,iy,iz)*weights(orientation2,type2,4,ix,iy,iz))...
%                         +weights(orientation2,type2,1,ix,iy,iz)*terms(elements(i_positional_element),3,ix,iy,iz))...
%                         ...
%                         +terms(elements(i_positional_element),6,ix,iy,iz)...
%                         *wTerms(orientation2,type2,ix,iy,iz))...
%                         +wTerms(orientation1,type1,ix,iy,iz)...
%                         *wTerms(orientation2,type2,ix,iy,iz)...
%                         ...
%                         );
%                     
%                     test2=w(ix)*w(iy)*w(iz)*(...
%                         weights(orientation1,type1,1,ix,iy,iz)*weights(orientation2,type2,1,ix,iy,iz)/dt...
%                         -diffT*weights(orientation1,type1,1,ix,iy,iz)...
%                         *(weights(orientation2,type2,1,ix,iy,iz)...
%                         *terms(elements(i_positional_element),4,ix,iy,iz)...
%                         +weights(orientation2,type2,1,ix,iy,iz)...
%                         *terms(elements(i_positional_element),5,ix,iy,iz)...
%                         +terms(elements(i_positional_element),6,ix,iy,iz)...
%                         *wTerms(orientation2,type2,ix,iy,iz))...
%                         +wTerms(orientation1,type1,ix,iy,iz)...
%                         *wTerms(orientation2,type2,ix,iy,iz)...
%                         ...
%                         );
%                     
%                     if abs(test1-test2)>10^-8
%                         test1
%                         test2
%                         error('oh bad')
%                     end
                    
                    
                    %---------------------------------------------------------
                    
                end
            end
        end
        
    end
end
solution=solution*dxyz;

% % test1=test1*dxyz;
% dlmwrite('test1.dat',test1);
% warning('power 1')
% sum(test1)

end