function sj=compute_sj_with_terms_curved_3d(gbfs1,gbfs2,nnz_,dt,weights,nex,ney,nx,ny,nz,determinants,diffT,wTerms,terms,conc_234)

sj=zeros(1,nnz_);

w=[5/18 4/9 5/18];

if isscalar(diffT)
    parfor sjth=1:1:nnz_
        sj(sjth)=compute_sjth_sj_with_terms_3d(sjth,gbfs1,gbfs2,...
            w,dt,diffT,weights,nex,ney,nx,ny,nz,determinants,wTerms,terms,conc_234);
    end
else
    parfor sjth=1:1:nnz_
        sj(sjth)=compute_sjth_sj_gradient_with_terms_3d(sjth,gbfs1,gbfs2,...
            w,dt,diffT,weights,nex,ney,nx,ny,nz,determinants,wTerms,terms);
    end
end

end

% === Temperature gradient is present =============================================

% function solution=compute_sjth_sj_gradient_with_terms_3d(sjth,gbfs1,gbfs2,...
%     w,dt,diffT,weights,nex,ney,nx,ny,nz,determinants,wTerms,terms)
% 
% solution=0;
% 
% [elements,lbfs1,lbfs2]=analyze_interaction_3d(...
% 	gbfs1(sjth),gbfs2(sjth),nex,ney,nx,ny,nz);
% 
% for i_positional_element=1:1:8
% 
%     if elements(i_positional_element)~=0
%      
%         [orientation1,type1]=analyze_lbf_3d(lbfs1(i_positional_element));
%         [orientation2,type2]=analyze_lbf_3d(lbfs2(i_positional_element));
%         
%         n1xth=get_n1xth_3d(elements(i_positional_element),nex);
%         
%         for ix=1:1:3
%             for iy=1:1:3
%                 for iz=1:1:3
%                     
%                     solution=solution+w(ix)*w(iy)*w(iz)...
%                         *determinants(elements(i_positional_element),ix,iy,iz)*(...
%                         weights(elements(i_positional_element),orientation1,type1,1,ix,iy,iz)*weights(elements(i_positional_element),orientation2,type2,1,ix,iy,iz)/dt...
%                         -diffT(elements(i_positional_element))*weights(elements(i_positional_element),orientation1,type1,1,ix,iy,iz)...
%                         *(weights(elements(i_positional_element),orientation2,type2,1,ix,iy,iz)...
%                         *terms(elements(i_positional_element),4,ix,iy,iz)...
%                         +weights(elements(i_positional_element),orientation2,type2,1,ix,iy,iz)...
%                         *terms(elements(i_positional_element),5,ix,iy,iz)...
%                         +terms(elements(i_positional_element),6,ix,iy,iz)...
%                         *wTerms(elements(i_positional_element),orientation2,type2,ix,iy,iz))...
%                         +wTerms(elements(i_positional_element),orientation1,type1,ix,iy,iz)...
%                         *wTerms(elements(i_positional_element),orientation2,type2,ix,iy,iz)...
%                         ...
%                         );
%                 end
%             end
%         end
%     end
% end
% % solution=solution*dxyz;
% end

% === No temperature gradient =============================================

function solution=compute_sjth_sj_with_terms_3d(sjth,gbfs1,gbfs2,...
    w,dt,diffT,weights,nex,ney,nx,ny,nz,determinants,wTerms,terms,conc_234)

solution=0;

[elements,lbfs1,lbfs2]=analyze_interaction_3d(...
	gbfs1(sjth),gbfs2(sjth),nex,ney,nx,ny,nz);


% itest=0;
% test2=zeros(54,14);

for i_positional_element=1:1:8

    if elements(i_positional_element)~=0
     
        [orientation1,type1]=analyze_lbf_3d(lbfs1(i_positional_element));
        [orientation2,type2]=analyze_lbf_3d(lbfs2(i_positional_element));
        
        for ix=1:1:3
            for iy=1:1:3
                for iz=1:1:3
                    
%                     solution=solution+w(ix)*w(iy)*w(iz)...
%                         *determinants(elements(i_positional_element),ix,iy,iz)*(...
%                         weights(elements(i_positional_element),orientation1,type1,1,ix,iy,iz)*weights(elements(i_positional_element),orientation2,type2,1,ix,iy,iz)/dt...
%                         -diffT*weights(elements(i_positional_element),orientation1,type1,1,ix,iy,iz)...
%                         *(weights(elements(i_positional_element),orientation2,type2,1,ix,iy,iz)...
%                         *terms(elements(i_positional_element),4,ix,iy,iz)...
%                         +weights(elements(i_positional_element),orientation2,type2,1,ix,iy,iz)...
%                         *terms(elements(i_positional_element),5,ix,iy,iz)...
%                         +terms(elements(i_positional_element),6,ix,iy,iz)...
%                         *wTerms(elements(i_positional_element),orientation2,type2,ix,iy,iz))...
%                         +wTerms(elements(i_positional_element),orientation1,type1,ix,iy,iz)...
%                         *wTerms(elements(i_positional_element),orientation2,type2,ix,iy,iz)...
%                         ...
%                         );

%                     size(conc_)
%                     elements(i_positional_element)
%                     size(weights)
%                     conc_(elements(i_positional_element),2,ix,iy,iz)
%                     weights(elements(i_positional_element),orientation2,type2,2,ix,iy,iz)
                    
                    solution=solution+w(ix)*w(iy)*w(iz)...
                         *determinants(elements(i_positional_element),ix,iy,iz)*(...
                         ...
                         weights(elements(i_positional_element),orientation1,type1,1,ix,iy,iz)*weights(elements(i_positional_element),orientation2,type2,1,ix,iy,iz)/dt...
                        -diffT*weights(elements(i_positional_element),orientation1,type1,1,ix,iy,iz)...
                        *(weights(elements(i_positional_element),orientation2,type2,1,ix,iy,iz)...
                        *terms(elements(i_positional_element),4,ix,iy,iz)...
                        ...
                        ...
                        +terms(elements(i_positional_element),5,ix,iy,iz)...
                        *(2*(conc_234(elements(i_positional_element),1,ix,iy,iz)*weights(elements(i_positional_element),orientation2,type2,2,ix,iy,iz)...
                        +conc_234(elements(i_positional_element),2,ix,iy,iz)*weights(elements(i_positional_element),orientation2,type2,3,ix,iy,iz)...
                        +conc_234(elements(i_positional_element),3,ix,iy,iz)*weights(elements(i_positional_element),orientation2,type2,4,ix,iy,iz))...
                        +weights(elements(i_positional_element),orientation2,type2,1,ix,iy,iz)*terms(elements(i_positional_element),3,ix,iy,iz))...
                        ...
                        +terms(elements(i_positional_element),6,ix,iy,iz)...
                        *wTerms(elements(i_positional_element),orientation2,type2,ix,iy,iz))...
                        +wTerms(elements(i_positional_element),orientation1,type1,ix,iy,iz)...
                        *wTerms(elements(i_positional_element),orientation2,type2,ix,iy,iz)...
                         ...
                         );
                     
                    
%                     solution=solution+take;
%                     
%                     itest=itest+1;
%                     test2(itest,1)=take;
%                     test2(itest,2)=determinants(elements(i_positional_element),ix,iy,iz);
%                     test2(itest,3)=weights(elements(i_positional_element),orientation1,type1,1,ix,iy,iz)*weights(elements(i_positional_element),orientation2,type2,1,ix,iy,iz)/dt;
%                     test2(itest,4)=diffT*weights(elements(i_positional_element),orientation1,type1,1,ix,iy,iz);
%                     test2(itest,5)=weights(elements(i_positional_element),orientation2,type2,1,ix,iy,iz)...
%                         *terms(elements(i_positional_element),4,ix,iy,iz);
%                     test2(itest,6)=(2*(conc_(elements(i_positional_element),2,ix,iy,iz)*weights(elements(i_positional_element),orientation2,type2,2,ix,iy,iz)...
%                         +conc_(elements(i_positional_element),3,ix,iy,iz)*weights(elements(i_positional_element),orientation2,type2,3,ix,iy,iz)...
%                         +conc_(elements(i_positional_element),4,ix,iy,iz)*weights(elements(i_positional_element),orientation2,type2,4,ix,iy,iz))...
%                         +weights(elements(i_positional_element),orientation2,type2,1,ix,iy,iz)*terms(elements(i_positional_element),3,ix,iy,iz));
%                     test2(itest,7)=terms(elements(i_positional_element),6,ix,iy,iz)...
%                         *wTerms(elements(i_positional_element),orientation2,type2,ix,iy,iz);
%                     test2(itest,8)=wTerms(elements(i_positional_element),orientation1,type1,ix,iy,iz)...
%                         *wTerms(elements(i_positional_element),orientation2,type2,ix,iy,iz);
%                     test2(itest,9)=terms(elements(i_positional_element),5,ix,iy,iz);
%                     
%                     test2(itest,10)=elements(i_positional_element);
%                     test2(itest,11)=ix;
%                     test2(itest,12)=iy;
%                     test2(itest,13)=iz;
%                     test2(itest,14)=0;
                    
                    
%                     if itest==500000
%                         warning('sekai 1')
%                         solution
%                         return
%                     end
                     
%                      warning('sekai 2')
%                      solution
%                      return
                     
%                      a=weights(elements(i_positional_element),orientation1,type1,1,ix,iy,iz)*weights(elements(i_positional_element),orientation2,type2,1,ix,iy,iz);
%                      b=(2*(conc_(elements(i_positional_element),2,ix,iy,iz)*weights(elements(i_positional_element),orientation2,type2,2,ix,iy,iz)...
%                         +conc_(elements(i_positional_element),3,ix,iy,iz)*weights(elements(i_positional_element),orientation2,type2,3,ix,iy,iz)...
%                         +conc_(elements(i_positional_element),4,ix,iy,iz)*weights(elements(i_positional_element),orientation2,type2,4,ix,iy,iz)));
%                     c=conc_(elements(i_positional_element),2,ix,iy,iz);
%                     d=weights(elements(i_positional_element),orientation2,type2,2,ix,iy,iz);
% %                     e=
%                     [a b c d]
%                      warning('Now I have is')
%                      solution
%                      return
                    
                end
            end
        end
        
    end
end


% dlmwrite('test2.dat',test2);
% warning('power 2')
% sum(test2)

% solution=solution*dxyz;
end